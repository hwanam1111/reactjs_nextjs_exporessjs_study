{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/pages/post/[id].js\";\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { PostCard } from 'antd';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_SPECIFY_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../components/AppLayout';\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_SPECIFY_POST_REQUEST,\n    data: context.query.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/pages/post/[id].js"],"names":["useSelector","useRouter","END","axios","PostCard","wrapper","LOAD_MY_INFO_REQUEST","LOAD_SPECIFY_POST_REQUEST","AppLayout","Post","router","id","query","singlePost","state","post","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","sagaTask","toPromise"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;AAEA,sBACE,QAAC,SAAD;AAAA,2BACA,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAYA,OAAO,MAAMG,kBAAkB,GAAGX,OAAO,CAACW,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;;AACA,MAAID,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBf,IAAAA,KAAK,CAACkB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEnB;AADe,GAAvB;AAIAW,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAElB,yBADe;AAErBmB,IAAAA,IAAI,EAAET,OAAO,CAACL,KAAR,CAAcD;AAFC,GAAvB;AAKAM,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBtB,GAAvB;AACA,QAAMe,OAAO,CAACM,KAAR,CAAcI,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAjBiC,CAA3B;AAmBP,eAAenB,IAAf","sourcesContent":["import { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { PostCard } from 'antd';\n\nimport wrapper from '../../store/configureStore';\n\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_SPECIFY_POST_REQUEST } from '../../reducers/post';\n\nimport AppLayout from '../../components/AppLayout';\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n\n  return (\n    <AppLayout>\n    <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n\n  context.store.dispatch({\n    type: LOAD_SPECIFY_POST_REQUEST,\n    data: context.query.id,\n  });\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}