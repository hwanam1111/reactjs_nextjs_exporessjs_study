{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from 'redux-saga/effects'; // import axios from 'axios';\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user'; // function addPostAPI(data) {\n//   return axios.post('/api/post', data);\n// }\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000); // const id = shortId.generate();\n\n    const id = Math.random() * 10000000 + 0;\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function addCommentAPI(data) {\n//   return axios.post('/api/post/${data.postId}/comment', data);\n// }\n\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function removePostAPI() {\n//   axios.post('', );\n// }\n\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPost","action","id","Math","random","type","data","content","err","error","response","addComment","removePost","watchAddPost","watchAddComment","watchRemovePost","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put } from 'redux-saga/effects';\n// import axios from 'axios';\n\nimport {\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\n} from '../reducers/post';\n\nimport {\n  ADD_POST_TO_ME, REMOVE_POST_OF_ME,\n} from '../reducers/user';\n\n// function addPostAPI(data) {\n//   return axios.post('/api/post', data);\n// }\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    // const id = shortId.generate();\n    const id = Math.random() * 10000000 + 0;\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function addCommentAPI(data) {\n//   return axios.post('/api/post/${data.postId}/comment', data);\n// }\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      // data: result.data\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function removePostAPI() {\n//   axios.post('', );\n// }\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}