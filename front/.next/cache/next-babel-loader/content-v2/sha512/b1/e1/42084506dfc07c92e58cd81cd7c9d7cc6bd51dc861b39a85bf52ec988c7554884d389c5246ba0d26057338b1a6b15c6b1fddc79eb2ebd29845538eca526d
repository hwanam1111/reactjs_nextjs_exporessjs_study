{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/LoginForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var formWrapperStyle = useMemo(function () {\n    return {\n      padding: 10\n    };\n  }, []);\n  var formButtonStyle = useMemo(function () {\n    return {\n      marginTop: 10\n    };\n  }, []);\n  var onChangeIdHandler = useCallback(function (evt) {\n    setId(evt.target.value);\n  }, []);\n  var onChangePasswordHandler = useCallback(function (evt) {\n    setPassword(evt.target.value);\n  }, []);\n  var onSubmitFormHandler = useCallback(function () {\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: formWrapperStyle,\n      onFinish: onSubmitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"user-id\",\n          value: id,\n          onChange: onChangeIdHandler,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"user-password\",\n          value: password,\n          onChange: onChangePasswordHandler,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: formButtonStyle,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 35\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n}; // LoginForm.propTypes = {\n//   setIsLoggedIn: PropTypes.node.isRequired\n// }\n\n\n_s(LoginForm, \"8gUikaVjbfFH+nyBCyF9rPcqWdY=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","useMemo","Link","PropTypes","Form","Input","Button","LoginForm","setIsLoggedIn","id","setId","password","setPassword","formWrapperStyle","padding","formButtonStyle","marginTop","onChangeIdHandler","evt","target","value","onChangePasswordHandler","onSubmitFormHandler"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'antd';\n\nconst LoginForm = ( { setIsLoggedIn } ) => {\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n\n  const formWrapperStyle = useMemo(() => ({\n    padding: 10\n  }), []);\n\n  const formButtonStyle = useMemo(() => ({\n    marginTop: 10\n  }), []);\n\n  const onChangeIdHandler = useCallback((evt) => {\n    setId(evt.target.value);\n  }, []);\n\n  const onChangePasswordHandler = useCallback((evt) => {\n    setPassword(evt.target.value);\n  }, []);\n\n  const onSubmitFormHandler = useCallback(() => {\n    setIsLoggedIn(true);\n  }, [id, password]);\n\n\n  return (\n    <div>\n      <Form style={formWrapperStyle} onFinish={onSubmitFormHandler}>\n        <div>\n          <label htmlFor=\"user-id\">아이디</label>\n          <br />\n          <Input \n            type=\"text\" \n            name=\"user-id\" \n            value={id} \n            onChange={onChangeIdHandler} \n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"user-password\">비밀번호</label>\n          <br />\n          <Input \n            type=\"password\" \n            name=\"user-password\" \n            value={password} \n            onChange={onChangePasswordHandler} \n            required \n          />\n        </div>\n        <div style={formButtonStyle}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\n          <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\n// LoginForm.propTypes = {\n//   setIsLoggedIn: PropTypes.node.isRequired\n// }\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}