{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_COMMENT_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_COMMENT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest('ADD_COMMENT_REQUEST', addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","addPost","action","type","data","err","response","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD;;AAIA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,kBADE;AAER;AACAC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAHL,KAAD,CAAT;AAKD,GARD,CASA,OAAMC,GAAN,EAAW;AACT,UAAML,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,kBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,UAAV,CAAqBL,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,qBADE;AAER;AACAC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAHL,KAAD,CAAT;AAKD,GARD,CASA,OAAMC,GAAN,EAAW;AACT,UAAML,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,qBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMV,UAAU,CAAC,kBAAD,EAAqBG,OAArB,CAAhB;AACD;;AAED,UAAUQ,eAAV,GAA4B;AAC1B,QAAMX,UAAU,CAAC,qBAAD,EAAwBS,UAAxB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMd,GAAG,CAAC,CACRC,IAAI,CAACW,YAAD,CADI,EAERX,IAAI,CAACY,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\n\n\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_COMMENT_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'ADD_COMMENT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest('ADD_COMMENT_REQUEST', addComment);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchAddComment)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}