{"ast":null,"code":"import { all, call, fork, put, take } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\n\nimport axios from 'axios';\n\nfunction loginAPI() {\n  return axios.post('/api/~~~');\n}\n\nfunction* login() {\n  try {\n    const result = yield call(loginAPI);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield take('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/index.js"],"names":["all","call","fork","put","take","axios","loginAPI","post","login","result","type","data","err","response","watchLogin","watchLogout","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C,C,CAAiE;;AACjE,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB,SAAOD,KAAK,CAACE,IAAN,CAAW,UAAX,CAAP;AACD;;AAED,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACK,QAAD,CAAzB;AACA,UAAMH,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFL,KAAD,CAAT;AAID,GAND,CAOA,OAAMC,GAAN,EAAW;AACT,UAAMT,GAAG,CAAC;AACRO,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,UAAV,GAAuB;AACrB,QAAMV,IAAI,CAAC,gBAAD,EAAmBI,KAAnB,CAAV;AACD;;AAED,UAAUO,WAAV,GAAwB;AACtB,QAAMX,IAAI,CAAC,SAAD,CAAV;AACD;;AAED,UAAUY,YAAV,GAAyB;AACvB,QAAMZ,IAAI,CAAC,UAAD,CAAV;AACD;;AAED,eAAe,UAAUa,QAAV,GAAqB;AAClC,QAAMjB,GAAG,CAAC,CACNE,IAAI,CAACY,UAAD,CADE,EAENZ,IAAI,CAACa,WAAD,CAFE,EAGNb,IAAI,CAACc,YAAD,CAHE,CAAD,CAAT;AAKD","sourcesContent":["import { all, call, fork, put, take } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\nimport axios from 'axios';\n\nfunction loginAPI() {\n  return axios.post('/api/~~~');\n}\n\nfunction* login() {\n  try {\n    const result = yield call(loginAPI);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield take('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield take('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([\n      fork(watchLogin),\n      fork(watchLogout),\n      fork(watchAddPost)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}