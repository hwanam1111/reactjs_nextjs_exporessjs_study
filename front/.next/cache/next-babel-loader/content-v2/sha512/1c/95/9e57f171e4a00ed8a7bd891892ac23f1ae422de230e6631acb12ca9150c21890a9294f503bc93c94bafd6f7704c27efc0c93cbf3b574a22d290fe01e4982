{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\"; // import axios from 'axios';\n// function loginAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","delay","put","logIn","action","type","data","err","response","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD,C,CACA;AAGA;AACA;AACA;;AAEA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,gBADE;AAER;AACAC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAHL,KAAD,CAAT;AAKD,GARD,CASA,OAAMC,GAAN,EAAW;AACT,UAAML,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUG,MAAV,CAAiBL,MAAjB,EAAyB;AACvB,MAAI;AACF;AACA,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,iBADE;AAER;AACAC,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAHL,KAAD,CAAT;AAKD,GARD,CASA,OAAMC,GAAN,EAAW;AACT,UAAML,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAE,iBADE;AAERC,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAID,UAAUI,UAAV,GAAuB;AACrB,QAAMV,UAAU,CAAC,gBAAD,EAAmBG,KAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAMX,UAAU,CAAC,iBAAD,EAAoBS,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMd,GAAG,CAAC,CACRC,IAAI,CAACW,UAAD,CADI,EAERX,IAAI,CAACY,WAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\n// import axios from 'axios';\n\n\n// function loginAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\n\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut)\n  ])\n}"]},"metadata":{},"sourceType":"module"}