{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 10px;\\n  &:last-child {\\n    marign-bottom: 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport PostImages from '../components/PostImages';\nimport CommentForm from '../components/CommentForm';\nvar CardItemListWrapper = styled.div(_templateObject());\n_c = CardItemListWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var meId = me === null || me === void 0 ? void 0 : me.id; // optional chaining 연산자\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n\n  var _useState2 = useState(false),\n      commentFormOpend = _useState2[0],\n      setCommentFormOpend = _useState2[1];\n\n  var onToggleCommentOpen = useCallback(function () {\n    setCommentFormOpend(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CardItemListWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 31\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        twoToneColor: \"#eb2f96\",\n        style: {\n          color: '#eb2f96'\n        },\n        onClick: onToggleLike\n      }, \"header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 125\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleCommentOpen\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: meId && meId === post.User.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              htmlType: \"button\",\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              htmlType: \"button\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              htmlType: \"button\",\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), commentFormOpend && /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n}; // 최대한 자세하게\n\n\n_s(PostCard, \"m2U28AQUROc0DcfwzXZm3IMkwIg=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardItemListWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","useSelector","PropTypes","Card","Popover","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","PostImages","CommentForm","CardItemListWrapper","div","PostCard","post","state","user","me","meId","id","liked","setLiked","onToggleLike","prev","commentFormOpend","setCommentFormOpend","onToggleCommentOpen","Images","color","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nimport PostImages from '../components/PostImages';\nimport CommentForm from '../components/CommentForm';\n\nconst CardItemListWrapper = styled.div`\n  margin-bottom: 10px;\n  &:last-child {\n    marign-bottom: 0;\n  }\n`;\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const meId = me?.id; // optional chaining 연산자\n\n  const [liked, setLiked] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n\n  const [commentFormOpend, setCommentFormOpend] = useState(false);\n  const onToggleCommentOpen = useCallback(() => {\n    setCommentFormOpend((prev) => !prev);\n  }, []);\n\n  return (\n    <CardItemListWrapper>\n      <Card\n        cover={post.Images && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? <HeartOutlined twoToneColor=\"#eb2f96\" style={{color: '#eb2f96'}} key=\"header\" onClick={onToggleLike} /> : <HeartOutlined key=\"header\" onClick={onToggleLike} />,\n          <MessageOutlined key=\"comment\" onClick={onToggleCommentOpen} />,\n          <Popover key=\"more\" content={(\n            <Button.Group>\n              { \n                meId && meId === post.User.id ?\n                  <>\n                    <Button htmlType=\"button\">수정</Button>\n                    <Button htmlType=\"button\">삭제</Button>\n                  </>\n                :\n                  <>\n                    <Button htmlType=\"button\">신고</Button>\n                  </>\n              }\n            </Button.Group>\n          )}>\n            <EllipsisOutlined />\n          </Popover>\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      { commentFormOpend && <CommentForm /> }\n      {/* <CommentForm />\n      <Comments /> */}\n    </CardItemListWrapper>\n  );\n}\n\n// 최대한 자세하게\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}