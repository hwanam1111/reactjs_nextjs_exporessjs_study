{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\n\nimport axios from 'axios';\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest('ADD_POST');\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/index.js"],"names":["watchAddPost","rootSaga","all","call","delay","fork","put","takeLatest","axios","watchLogin","watchLogout"],"mappings":";;oDAIUA,Y;qDAIeC,Q;;AARzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD,C,CAA8E;;AAC9E,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAAC,UAAD,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACNG,IAAI,CAACI,UAAD,CADE,EAENJ,IAAI,CAACK,WAAD,CAFE,EAGNL,IAAI,CAACL,YAAD,CAHE,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\nimport axios from 'axios';\n\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([\n      fork(watchLogin),\n      fork(watchLogout),\n      fork(watchAddPost)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}