{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  // 로그인 했는지 체크\n  inLoggingOut: false,\n  // 로그아웃 시도 중\n  me: null,\n  signUpDate: {},\n  loginDate: {}\n};\nvar LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nvar LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var loginSuccessAction = function loginSuccessAction(data) {\n  return {\n    type: LOG_IN_SUCCESS,\n    data: data\n  };\n};\nvar LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var loginFailureAction = function loginFailureAction(data) {\n  return {\n    type: LOG_IN_FAILURE,\n    data: data\n  };\n};\nvar LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nvar LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var logoutSuccessAction = function logoutSuccessAction() {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\nvar LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var logoutFailureAction = function logoutFailureAction() {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\n\nvar userReduce = function userReduce() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true,\n        isLoggedIn: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false,\n        me: action.data\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReduce;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","inLoggingOut","me","signUpDate","loginDate","LOG_IN_REQUEST","loginRequestAction","data","type","LOG_IN_SUCCESS","loginSuccessAction","LOG_IN_FAILURE","loginFailureAction","LOG_OUT_REQUEST","logoutRequestAction","LOG_OUT_SUCCESS","logoutSuccessAction","LOG_OUT_FAILURE","logoutFailureAction","userReduce","state","action","isLoggingOut"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,WAAW,EAAE,KADa;AACN;AACpBC,EAAAA,UAAU,EAAE,KAFc;AAEP;AACnBC,EAAAA,YAAY,EAAE,KAHY;AAGL;AACrBC,EAAAA,EAAE,EAAE,IAJsB;AAK1BC,EAAAA,UAAU,EAAE,EALc;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,IAAMC,cAAc,GAAG,gBAAvB;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEH,cADD;AAELE,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,IAAME,cAAc,GAAG,gBAAvB;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEC,cADD;AAELF,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,IAAMI,cAAc,GAAG,gBAAvB;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACL,IAAD,EAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEG,cADD;AAELJ,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,IAAMM,eAAe,GAAG,iBAAxB;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLN,IAAAA,IAAI,EAAEK;AADD,GAAP;AAGD,CAJM;AAMP,IAAME,eAAe,GAAG,iBAAxB;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLR,IAAAA,IAAI,EAAEO;AADD,GAAP;AAGD,CAJM;AAMP,IAAME,eAAe,GAAG,iBAAxB;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,SAAO;AACLV,IAAAA,IAAI,EAAES;AADD,GAAP;AAGD,CAJM;;AAMP,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBtB,YAAyB;AAAA,MAAXuB,MAAW;;AACnD,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKH,cAAL;AACE,6CACKe,KADL;AAEErB,QAAAA,WAAW,EAAE,IAFf;AAGEC,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKS,cAAL;AACE,6CACKW,KADL;AAEErB,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,UAAU,EAAE,IAHd;AAIEE,QAAAA,EAAE,EAAEmB,MAAM,CAACd;AAJb;;AAMF,SAAKI,cAAL;AACE,6CACKS,KADL;AAEErB,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,UAAU,EAAE,KAHd;AAIEE,QAAAA,EAAE,EAAEmB,MAAM,CAACd;AAJb;;AAMF,SAAKM,eAAL;AACE,6CACKO,KADL;AAEEE,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAKP,eAAL;AACE,6CACKK,KADL;AAEEE,QAAAA,YAAY,EAAE,KAFhB;AAGEtB,QAAAA,UAAU,EAAE,KAHd;AAIEE,QAAAA,EAAE,EAAE;AAJN;;AAMF,SAAKe,eAAL;AACE,6CACKG,KADL;AAEEE,QAAAA,YAAY,EAAE;AAFhB;;AAIF;AACE,aAAOF,KAAP;AAvCJ;AAyCD,CA1CD;;AA4CA,eAAeD,UAAf","sourcesContent":["export const initialState = {\n  isLoggingIn: false, // 로그인 시도중\n  isLoggedIn: false, // 로그인 했는지 체크\n  inLoggingOut: false, // 로그아웃 시도 중\n  me: null,\n  signUpDate: {},\n  loginDate: {}\n}\n\nconst LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  }\n}\n\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const loginSuccessAction = (data) => {\n  return {\n    type: LOG_IN_SUCCESS,\n    data\n  }\n}\n\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const loginFailureAction = (data) => {\n  return {\n    type: LOG_IN_FAILURE,\n    data\n  }\n}\n\nconst LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  }\n}\n\nconst LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const logoutSuccessAction = () => {\n  return {\n    type: LOG_OUT_SUCCESS,\n  }\n}\n\nconst LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const logoutFailureAction = () => {\n  return {\n    type: LOG_OUT_FAILURE,\n  }\n}\n\nconst userReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        isLoggingIn: true,\n        isLoggedIn: false\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: action.data\n      };\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: false,\n        me: action.data\n      };\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        isLoggingOut: true,\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      };\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        isLoggingOut: false,\n      };\n    default: \n      return state;\n  }\n};\n\nexport default userReduce;"]},"metadata":{},"sourceType":"module"}