{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\nimport { addComment } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var meId = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var dispatch = useDispatch();\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    var postId = post.id;\n    dispatch(addComment({\n      postId: postId,\n      commentText: commentText\n    }));\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"3SGvDYv7yAoZ3olkp2EeCbAI/Jc=\", false, function () {\n  return [useInput, useSelector, useDispatch];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useDispatch","useSelector","Form","Input","Button","PropTypes","useInput","addComment","CommentForm","post","commentText","onChangeCommentText","meId","state","user","me","id","dispatch","onSubmitComment","console","log","postId","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACzBI,WADyB;AAAA,MACZC,mBADY;;AAGhC,MAAMC,IAAI,GAAGX,WAAW,CAAC,UAACY,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeC,EAA1B;AAAA,GAAD,CAAxB;AACA,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,MAAMkB,eAAe,GAAGnB,WAAW,CAAC,YAAM;AACxCoB,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACO,EAAjB,EAAqBN,WAArB;AACA,QAAMW,MAAM,GAAGZ,IAAI,CAACO,EAApB;AACAC,IAAAA,QAAQ,CAACV,UAAU,CAAC;AAACc,MAAAA,MAAM,EAANA,MAAD;AAASX,MAAAA,WAAW,EAAXA;AAAT,KAAD,CAAX,CAAR;AACD,GAJkC,EAIhC,CAACA,WAAD,CAJgC,CAAnC;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAER,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,GAAG,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAnBD;;GAAMH,W;UACuCF,Q,EAE9BL,W,EACID,W;;;KAJbQ,W;AAqBNA,WAAW,CAACc,SAAZ,GAAwB;AACtBb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAehB,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport useInput from '../hooks/useinput';\n\nimport { addComment } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const [commentText, onChangeCommentText] = useInput('');\n\n  const meId = useSelector((state) => state.user.me?.id);\n  const dispatch = useDispatch();\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    const postId = post.id;\n    dispatch(addComment({postId, commentText}));\n  }, [commentText])\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4} />\n        <Button htmlType=\"submit\">작성</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}