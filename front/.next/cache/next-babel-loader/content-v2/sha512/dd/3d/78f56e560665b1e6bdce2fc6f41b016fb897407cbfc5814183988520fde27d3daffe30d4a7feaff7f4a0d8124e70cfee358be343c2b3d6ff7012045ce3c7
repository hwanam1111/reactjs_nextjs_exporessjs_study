{"ast":null,"code":"import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function followAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function unfollowAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLoadMyInfo), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","delay","put","call","axios","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginAPI","data","post","logIn","action","result","type","err","error","response","loadMyInfoAPI","get","loadMyInfo","logoutAPI","logOut","signupAPI","signUp","follow","unfollow","watchLogIn","watchLoadMyInfo","watchLogOut","watchSignUp","watchFollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\n} from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function followAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function unfollowAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLoadMyInfo),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}