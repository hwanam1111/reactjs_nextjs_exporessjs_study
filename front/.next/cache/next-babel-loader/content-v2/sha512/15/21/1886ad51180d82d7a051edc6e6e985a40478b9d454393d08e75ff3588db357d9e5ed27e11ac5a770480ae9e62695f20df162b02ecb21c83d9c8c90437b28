{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '곰준'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: 'https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory2&fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F24283C3858F778CA2EFABE'\n    }, {\n      id: shortId.generate(),\n      src: 'https://taegon.kim/wp-content/uploads/2018/05/image-5.png'\n    }, {\n      id: shortId.generate(),\n      src: 'https://www.urbanbrush.net/web/wp-content/uploads/edd/2018/12/urbanbrush-20181213142535248709.png'\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'lion'\n      },\n      content: '댓글 입니다 ~'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'haha'\n      },\n      content: '촉박해용 ~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostComplete: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentComplete: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostComplete: false,\n  removePostError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPostRequestAction = function addPostRequestAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommentRequestAction = function addCommentRequestAction(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var removePostRequestAction = function removePostRequestAction(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPostData = function dummyPostData(data) {\n  var randomId = shortId.generate();\n  console.log(randomId);\n  return {\n    id: randomId,\n    content: data.content.content,\n    User: {\n      id: 1,\n      nickname: data.content.nickname\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar postReduce = function postReduce() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostComplete: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPostData(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostComplete: true,\n        addPostError: null\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostComplete: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentComplete: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [{\n          User: {\n            nickname: '닉네임 ~'\n          },\n          content: action.data.content\n        }].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentComplete: true,\n          addCommentError: null\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentComplete: false,\n        addCommentError: action.error\n      });\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: true,\n        removePostComplete: false,\n        removePostError: null\n      });\n\n    case REMOVE_POST_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          }),\n          removePostLoading: false,\n          removePostComplete: true,\n          removePostError: null\n        });\n      }\n\n    case REMOVE_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        removePostLoading: false,\n        removePostComplete: false,\n        removePostError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default postReduce;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostComplete","addPostError","addCommentLoading","addCommentComplete","addCommentError","removePostLoading","removePostComplete","removePostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPostRequestAction","data","type","addCommentRequestAction","removePostRequestAction","dummyPostData","randomId","console","log","postReduce","state","action","error","postIndex","findIndex","v","postId","post","filter"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: '곰준',\n      },\n      content: '첫 번째 게시글 #해시태그 #익스프레스',\n      Images: [\n        {\n          id: shortId.generate(),\n          src: 'https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory2&fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F24283C3858F778CA2EFABE',\n        },\n        {\n          id: shortId.generate(),\n          src: 'https://taegon.kim/wp-content/uploads/2018/05/image-5.png',\n        },\n        {\n          id: shortId.generate(),\n          src: 'https://www.urbanbrush.net/web/wp-content/uploads/edd/2018/12/urbanbrush-20181213142535248709.png',\n        },\n      ],\n      Comments: [\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: 'lion',\n          },\n          content: '댓글 입니다 ~',\n        },\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: 'haha',\n          },\n          content: '촉박해용 ~',\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostComplete: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentComplete: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostComplete: false,\n  removePostError: null,\n};\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const addPostRequestAction = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addCommentRequestAction = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nexport const removePostRequestAction = (data) => ({\n  type: REMOVE_POST_REQUEST,\n  data,\n});\n\nconst dummyPostData = (data) => {\n  const randomId = shortId.generate();\n  console.log(randomId)\n  return {\n    id: randomId,\n    content: data.content.content,\n    User: {\n      id: 1,\n      nickname: data.content.nickname,\n    },\n    Images: [],\n    Comments: [],\n  };\n}\n\nconst postReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoading: true,\n        addPostComplete: false,\n        addPostError: null,\n      };\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPostData(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostComplete: true,\n        addPostError: null,\n      };\n    case ADD_POST_FAILURE:\n      return {\n        ...state,\n        addPostLoading: false,\n        addPostComplete: false,\n        addPostError: action.error,\n      };\n    case ADD_COMMENT_REQUEST:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentComplete: false,\n        addCommentError: null,\n      };\n    case ADD_COMMENT_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n      const post = { ...state.mainPosts[postIndex] };\n      post.Comments = [\n        {\n          User: {\n            nickname: '닉네임 ~',\n          },\n          content: action.data.content,\n        },\n        ...post.Comments];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = post;\n\n      return {\n        ...state,\n        mainPosts,\n        addCommentLoading: false,\n        addCommentComplete: true,\n        addCommentError: null,\n      };\n    }\n    case ADD_COMMENT_FAILURE:\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentComplete: false,\n        addCommentError: action.error,\n      };\n    case REMOVE_POST_REQUEST:\n      return {\n        ...state,\n        removePostLoading: true,\n        removePostComplete: false,\n        removePostError: null,\n      };\n    case REMOVE_POST_SUCCESS: {\n      return {\n        ...state,\n        mainPosts: state.mainPosts.filter((v) => v.id !== action.data),\n        removePostLoading: false,\n        removePostComplete: true,\n        removePostError: null,\n      };\n    }\n    case REMOVE_POST_FAILURE:\n      return {\n        ...state,\n        removePostLoading: false,\n        removePostComplete: false,\n        removePostError: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postReduce;\n"]},"metadata":{},"sourceType":"module"}