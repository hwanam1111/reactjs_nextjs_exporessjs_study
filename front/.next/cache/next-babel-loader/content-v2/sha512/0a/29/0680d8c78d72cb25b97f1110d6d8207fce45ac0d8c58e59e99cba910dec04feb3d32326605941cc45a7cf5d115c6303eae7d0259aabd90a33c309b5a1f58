{"ast":null,"code":"import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, POST_LIKED_REQUEST, POST_LIKED_SUCCESS, POST_LIKED_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostAPI() {\n  return axios.get('/posts/load_posts');\n}\n\nfunction* loadPost() {\n  try {\n    const result = yield call(loadPostAPI);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post/add_post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        data: result.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction postLikedAPI(data) {\n  return axios.post(`/post/${data.postId}/liked`);\n}\n\nfunction* postLiked(action) {\n  try {\n    const result = yield call(postLikedAPI, action.data);\n    yield put({\n      type: POST_LIKED_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: POST_LIKED_FAILURE,\n      error: err.response.data\n    });\n  }\n} // function removePostAPI() {\n//   axios.post('', );\n// }\n\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchPostLike() {\n  yield takeLatest(POST_LIKED_REQUEST, postLiked);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadPost), fork(watchAddPost), fork(watchAddComment), fork(watchPostLike), fork(watchRemovePost)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/post.js"],"names":["all","fork","takeLatest","delay","put","call","axios","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","POST_LIKED_REQUEST","POST_LIKED_SUCCESS","POST_LIKED_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostAPI","get","loadPost","result","type","data","err","error","response","addPostAPI","post","addPost","action","id","console","addCommentAPI","postId","addComment","postLikedAPI","postLiked","removePost","watchLoadPost","watchAddPost","watchAddComment","watchPostLike","watchRemovePost","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, delay, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE,\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n  POST_LIKED_REQUEST, POST_LIKED_SUCCESS, POST_LIKED_FAILURE,\n  REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\n} from '../reducers/post';\n\nimport {\n  ADD_POST_TO_ME, REMOVE_POST_OF_ME,\n} from '../reducers/user';\n\nfunction loadPostAPI() {\n  return axios.get('/posts/load_posts');\n}\n\nfunction* loadPost() {\n  try {\n    const result = yield call(loadPostAPI);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post/add_post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        data: result.data,\n      },\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction postLikedAPI(data) {\n  return axios.post(`/post/${data.postId}/liked`)\n}\n\nfunction* postLiked(action) {\n  try {\n    const result = yield call(postLikedAPI, action.data);\n    yield put({\n      type: POST_LIKED_SUCCESS,\n      data: result.data,\n    });\n\n  } catch (err) {\n    yield put({\n      type: POST_LIKED_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n// function removePostAPI() {\n//   axios.post('', );\n// }\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchPostLike() {\n  yield takeLatest(POST_LIKED_REQUEST, postLiked);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchLoadPost),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchPostLike),\n    fork(watchRemovePost),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}