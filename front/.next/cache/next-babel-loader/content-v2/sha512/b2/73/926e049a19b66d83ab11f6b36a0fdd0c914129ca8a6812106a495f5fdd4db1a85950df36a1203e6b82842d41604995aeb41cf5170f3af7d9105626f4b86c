{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js\";\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nconst FormWrapper = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1s2xvqa-0\"\n})([\"margin:20px;\"]);\nconst ImageWrraper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"PostForm__ImageWrraper\",\n  componentId: \"sc-1s2xvqa-1\"\n})([\"display:inline-block;\"]);\nconst Image = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"PostForm__Image\",\n  componentId: \"sc-1s2xvqa-2\"\n})([\"width:200px;\"]);\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostLoading,\n    addPostComplete\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostComplete) {\n      setText('');\n    }\n  }, [addPostComplete, setText]);\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImage = useCallback(evt => {\n    console.log('images', evt.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(evt.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(imageIndex => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: imageIndex\n    });\n  }, []);\n  const onSubmitPostForm = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 입력해주세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitPostForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      placeholder: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        ref: imageInput,\n        multiple: true,\n        hidden: true,\n        onChange: onChangeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onClickImageUploadBtn,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map((v, i) => /*#__PURE__*/_jsxDEV(ImageWrraper, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: `http://localhost:3065/${v}`,\n          alt: \"\\uC774\\uBBF8\\uC9C0\",\n          title: \"\\uC774\\uBBF8\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js"],"names":["React","useEffect","useCallback","useRef","useDispatch","useSelector","Form","Input","Button","styled","useInput","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","FormWrapper","ImageWrraper","div","Image","img","PostForm","dispatch","imagePaths","addPostLoading","addPostComplete","state","post","text","onChangeText","setText","imageInput","onClickImageUploadBtn","current","click","onChangeImage","evt","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","onRemoveImage","imageIndex","onSubmitPostForm","trim","alert","formData","p","map","v","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\n\nconst FormWrapper = styled(Form)`\n  margin: 20px;\n`;\n\nconst ImageWrraper = styled.div`\n  display: inline-block;\n`;\n\nconst Image = styled.img`\n  width: 200px;\n`;\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n\n  const { imagePaths, addPostLoading, addPostComplete } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostComplete) {\n      setText('');\n    }\n  }, [addPostComplete, setText]);\n\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImage = useCallback((evt) => {\n    console.log('images', evt.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(evt.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onRemoveImage = useCallback((imageIndex) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: imageIndex,\n    });\n  }, []);\n\n  const onSubmitPostForm = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 입력해주세요.');\n    }\n\n    const formData = new FormData();\n\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmitPostForm}>\n      <Input.TextArea value={text} onChange={onChangeText} placeholder=\"게시글을 입력해주세요\" />\n      <div>\n        <input type=\"file\" name=\"image\" ref={imageInput} multiple hidden onChange={onChangeImage} />\n        <Button htmlType=\"button\" onClick={onClickImageUploadBtn}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\" loading={addPostLoading}>작성하기</Button>\n      </div>\n      <div>\n        {\n          imagePaths.map((v, i) => (\n            <ImageWrraper key={v}>\n              <Image src={`http://localhost:3065/${v}`} alt=\"이미지\" title=\"이미지\" />\n              <div>\n                <Button onClick={onRemoveImage(i)}>제거</Button>\n              </div>\n            </ImageWrraper>\n          ))\n        }\n      </div>\n    </FormWrapper>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}