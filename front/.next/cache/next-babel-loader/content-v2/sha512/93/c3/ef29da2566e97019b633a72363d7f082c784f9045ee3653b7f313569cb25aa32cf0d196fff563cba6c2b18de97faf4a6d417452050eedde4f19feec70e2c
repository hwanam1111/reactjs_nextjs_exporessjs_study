{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js\";\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { addPostRequestAction } from '../reducers/post';\nconst FormWrapper = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1s2xvqa-0\"\n})([\"margin:20px;\"]);\nconst ImageWrraper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"PostForm__ImageWrraper\",\n  componentId: \"sc-1s2xvqa-1\"\n})([\"display:inline-block;\"]);\nconst Image = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"PostForm__Image\",\n  componentId: \"sc-1s2xvqa-2\"\n})([\"width:200px;\"]);\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostLoading,\n    addCommentComplete\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    console.log('!@#$!@#$#@!');\n\n    if (addCommentComplete) {\n      setText('');\n    }\n  }, [addCommentComplete, setText]);\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const {\n    me\n  } = useSelector(state => state.user);\n  let tempId = 100;\n  const dispatch = useDispatch();\n  const onSubmitPostForm = useCallback(() => {\n    const dummyPost = {\n      id: tempId++,\n      content: text,\n      User: {\n        id: 1,\n        nickname: me.nickname\n      },\n      Images: [],\n      Comments: []\n    };\n    dispatch(addPostRequestAction({\n      dummyPost\n    }));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitPostForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      placeholder: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imageInput,\n        multiple: true,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onClickImageUploadBtn,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(ImageWrraper, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: v,\n          alt: \"\\uC774\\uBBF8\\uC9C0\",\n          title: \"\\uC774\\uBBF8\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js"],"names":["React","useEffect","useCallback","useRef","useDispatch","useSelector","Form","Input","Button","styled","useInput","addPostRequestAction","FormWrapper","ImageWrraper","div","Image","img","PostForm","imagePaths","addPostLoading","addCommentComplete","state","post","text","onChangeText","setText","console","log","imageInput","onClickImageUploadBtn","current","click","me","user","tempId","dispatch","onSubmitPostForm","dummyPost","id","content","User","nickname","Images","Comments","map","v"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { addPostRequestAction } from '../reducers/post';\n\nconst FormWrapper = styled(Form)`\n  margin: 20px;\n`;\n\nconst ImageWrraper = styled.div`\n  display: inline-block;\n`;\n\nconst Image = styled.img`\n  width: 200px;\n`;\n\nconst PostForm = () => {\n  const { imagePaths, addPostLoading, addCommentComplete } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    console.log('!@#$!@#$#@!');\n    if (addCommentComplete) {\n      setText('');\n    }\n  }, [addCommentComplete, setText]);\n\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const { me } = useSelector((state) => state.user);\n  let tempId = 100;\n  const dispatch = useDispatch();\n  const onSubmitPostForm = useCallback(() => {\n    const dummyPost = {\n      id: tempId++,\n      content: text,\n      User: {\n        id: 1,\n        nickname: me.nickname\n      },\n      Images: [], \n      Comments: []\n    };\n    dispatch(addPostRequestAction({dummyPost}));\n  }, [text]);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmitPostForm}>\n      <Input.TextArea value={text} onChange={onChangeText} placeholder=\"게시글을 입력해주세요\" />\n      <div>\n        <input type=\"file\" ref={imageInput} multiple hidden />\n        <Button htmlType=\"button\" onClick={onClickImageUploadBtn}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\" loading={addPostLoading}>작성하기</Button>\n      </div>\n      <div>\n        {\n          imagePaths.map((v) => (\n            <ImageWrraper key={v}>\n              <Image src={v} alt=\"이미지\" title=\"이미지\" />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </ImageWrraper>\n          ))\n        }\n      </div>\n    </FormWrapper>\n  );\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}