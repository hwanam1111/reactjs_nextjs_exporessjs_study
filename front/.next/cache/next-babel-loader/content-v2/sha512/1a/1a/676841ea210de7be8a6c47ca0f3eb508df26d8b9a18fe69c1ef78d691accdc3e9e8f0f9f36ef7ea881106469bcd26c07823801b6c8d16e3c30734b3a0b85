{"ast":null,"code":"import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/change_nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLoadMyInfo), fork(watchLogOut), fork(watchSignUp), fork(watchChangeNickname), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","put","call","axios","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","loginAPI","data","post","logIn","action","result","type","err","error","response","loadMyInfoAPI","get","loadMyInfo","logoutAPI","logOut","signupAPI","signUp","changeNicknameAPI","patch","nickname","changeNickname","followAPI","follow","unfollowAPI","delete","unfollow","watchLogIn","watchLoadMyInfo","watchLogOut","watchSignUp","watchChangeNickname","watchFollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n  FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n  UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\n  CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n} from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signupAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/change_nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLoadMyInfo),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchChangeNickname),\n    fork(watchFollow),\n    fork(watchUnfollow),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}