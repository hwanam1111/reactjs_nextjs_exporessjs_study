{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '곰준'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory2&fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F24283C3858F778CA2EFABE'\n    }, {\n      src: 'https://taegon.kim/wp-content/uploads/2018/05/image-5.png'\n    }, {\n      src: 'https://www.urbanbrush.net/web/wp-content/uploads/edd/2018/12/urbanbrush-20181213142535248709.png'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'lion'\n      },\n      content: '댓글 입니다 ~'\n    }, {\n      User: {\n        nickname: 'haha'\n      },\n      content: '촉박해용 ~'\n    }]\n  }, {\n    id: 2,\n    User: {\n      id: 2,\n      nickname: '후후'\n    },\n    content: '두 번째 게시글 #해시태그 #익스프레스'\n  }, {\n    id: 3,\n    User: {\n      id: 3,\n      nickname: '캬캬'\n    },\n    content: '세 번째 게시글 #해시태그 #익스프레스'\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = 'ADD_POST';\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 3,\n  content: '더미 데이터 입니다.',\n  User: {\n    id: 1,\n    nickname: '곰준'\n  },\n  Images: [],\n  Comments: []\n};\nvar ADD_COMMENT = 'ADD_COMMENT';\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT,\n    data: data\n  };\n};\n\nvar postReduce = function postReduce() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        postAdded: true\n      });\n\n    case ADD_COMMENT:\n      console.log(action.data);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: _toConsumableArray(state.mainPosts) // mainPosts: [\n        //   , ...state.mainPosts\n        // ],\n        // action.data\n\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default postReduce;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","ADD_COMMENT","addComment","data","postReduce","state","action","console","log"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE,uBANX;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EAAE;AADP,KADM,EAIN;AACEA,MAAAA,GAAG,EAAE;AADP,KAJM,EAON;AACEA,MAAAA,GAAG,EAAE;AADP,KAPM,CAPV;AAkBEC,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEF,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEC,MAAAA,OAAO,EAAE;AAJX,KAPQ;AAlBZ,GADS,EAkCT;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE;AANX,GAlCS,EA0CT;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AACJD,MAAAA,EAAE,EAAE,CADA;AAEJE,MAAAA,QAAQ,EAAE;AAFN,KAFR;AAMEC,IAAAA,OAAO,EAAE;AANX,GA1CS,CADe;AAoD1BI,EAAAA,UAAU,EAAE,EApDc;AAqD1BC,EAAAA,SAAS,EAAE;AArDe,CAArB;AAwDP,IAAMC,QAAQ,GAAG,UAAjB;AACA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,IAAMG,SAAS,GAAG;AAChBZ,EAAAA,EAAE,EAAE,CADY;AAEhBG,EAAAA,OAAO,EAAE,aAFO;AAGhBF,EAAAA,IAAI,EAAE;AACJD,IAAAA,EAAE,EAAE,CADA;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBE,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;AAWA,IAAMO,WAAW,GAAG,aAApB;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAClC,SAAO;AACLJ,IAAAA,IAAI,EAAEE,WADD;AAELE,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;;AAOP,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBnB,YAAyB;AAAA,MAAXoB,MAAW;;AACnD,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKF,QAAL;AACE,6CACKQ,KADL;AAEElB,QAAAA,SAAS,GAAGa,SAAH,4BAAiBK,KAAK,CAAClB,SAAvB,EAFX;AAGES,QAAAA,SAAS,EAAE;AAHb;;AAKF,SAAKK,WAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,IAAnB;AACA,6CACKE,KADL;AAEElB,QAAAA,SAAS,qBACJkB,KAAK,CAAClB,SADF,CAFX,CAKE;AACA;AACA;AACA;;AARF;;AAUF;AACE,aAAOkB,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,UAAf","sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: '곰준'\n      },\n      content: '첫 번째 게시글 #해시태그 #익스프레스',\n      Images: [\n        {\n          src: 'https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory2&fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F24283C3858F778CA2EFABE'\n        },\n        {\n          src: 'https://taegon.kim/wp-content/uploads/2018/05/image-5.png'\n        },\n        {\n          src: 'https://www.urbanbrush.net/web/wp-content/uploads/edd/2018/12/urbanbrush-20181213142535248709.png'\n        }\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: 'lion'\n          },\n          content: '댓글 입니다 ~'\n        },\n        {\n          User: {\n            nickname: 'haha'\n          },\n          content: '촉박해용 ~'\n        }\n      ]\n    },\n    {\n      id: 2,\n      User: {\n        id: 2,\n        nickname: '후후'\n      },\n      content: '두 번째 게시글 #해시태그 #익스프레스'\n    },\n    {\n      id: 3,\n      User: {\n        id: 3,\n        nickname: '캬캬'\n      },\n      content: '세 번째 게시글 #해시태그 #익스프레스'\n    }\n  ],\n  imagePaths: [],\n  postAdded: false\n}\n\nconst ADD_POST = 'ADD_POST';\nexport const addPost = {\n  type: ADD_POST\n}\n\nconst dummyPost = {\n  id: 3,\n  content: '더미 데이터 입니다.',\n  User: {\n    id: 1,\n    nickname: '곰준'\n  },\n  Images: [],\n  Comments: []\n}\n\nconst ADD_COMMENT = 'ADD_COMMENT';\nexport const addComment = (data) => {\n  return {\n    type: ADD_COMMENT,\n    data\n  }\n}\n\nconst postReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      }\n    case ADD_COMMENT:\n      console.log(action.data);\n      return {\n        ...state,\n        mainPosts: [\n          ...state.mainPosts\n        ]\n        // mainPosts: [\n        //   , ...state.mainPosts\n        // ],\n        // action.data\n      }\n    default: \n      return state;\n  }\n};\n\nexport default postReduce;"]},"metadata":{},"sourceType":"module"}