{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { addPostRequestAction } from '../reducers/post';\nvar FormWrapper = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1s2xvqa-0\"\n})([\"margin:20px;\"]);\n_c = FormWrapper;\nvar ImageWrraper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"PostForm__ImageWrraper\",\n  componentId: \"sc-1s2xvqa-1\"\n})([\"display:inline-block;\"]);\n_c2 = ImageWrraper;\nvar Image = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"PostForm__Image\",\n  componentId: \"sc-1s2xvqa-2\"\n})([\"width:200px;\"]);\n_c3 = Image;\n\nvar PostForm = function PostForm() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef(null);\n  var onClickImageUploadBtn = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var dispatch = useDispatch();\n  var tempId = 100;\n  var onSubmitPostForm = useCallback(_s(function () {\n    _s();\n\n    var _useSelector2 = useSelector(function (state) {\n      return state.user;\n    }),\n        me = _useSelector2.me;\n\n    var dummyPost = {\n      id: tempId++,\n      content: text,\n      User: {\n        id: 1,\n        nickname: me.nickname\n      },\n      Images: [],\n      Comments: []\n    };\n    console.log(dummyPost);\n    console.log('!!');\n    dispatch(addPostRequestAction({\n      text: text,\n      setText: setText\n    }));\n    setText('');\n  }, \"9V1uf3383/tS6kXOMMR8c8sBgP4=\", false, function () {\n    return [useSelector];\n  }), [text, setText]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitPostForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      placeholder: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imageInput,\n        multiple: true,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onClickImageUploadBtn,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(ImageWrraper, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: v,\n            alt: \"\\uC774\\uBBF8\\uC9C0\",\n            title: \"\\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(PostForm, \"8vYxOdWrUu18MBez0yHWjscHMuM=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c4 = PostForm;\nexport default PostForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"ImageWrraper\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"PostForm\");","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useSelector","useDispatch","Form","Input","Button","styled","useInput","addPostRequestAction","FormWrapper","ImageWrraper","div","Image","img","PostForm","state","post","imagePaths","text","onChangeText","setText","imageInput","onClickImageUploadBtn","current","click","dispatch","tempId","onSubmitPostForm","user","me","dummyPost","id","content","User","nickname","Images","Comments","console","log","map","v"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { addPostRequestAction } from '../reducers/post';\n\nconst FormWrapper = styled(Form)`\n  margin: 20px;\n`;\n\nconst ImageWrraper = styled.div`\n  display: inline-block;\n`;\n\nconst Image = styled.img`\n  width: 200px;\n`;\n\nconst PostForm = () => {\n  const { imagePaths } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput('');\n\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const dispatch = useDispatch();\n  let tempId = 100;\n  const onSubmitPostForm = useCallback(() => {\n    const { me } = useSelector((state) => state.user);\n    const dummyPost = {\n      id: tempId++,\n      content: text,\n      User: {\n        id: 1,\n        nickname: me.nickname\n      },\n      Images: [],\n      Comments: []\n    };\n    console.log(dummyPost);\n    console.log('!!');\n    dispatch(addPostRequestAction({text, setText}));\n    setText('');\n  }, [text, setText]);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmitPostForm}>\n      <Input.TextArea value={text} onChange={onChangeText} placeholder=\"게시글을 입력해주세요\" />\n      <div>\n        <input type=\"file\" ref={imageInput} multiple hidden />\n        <Button htmlType=\"button\" onClick={onClickImageUploadBtn}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\">작성하기</Button>\n      </div>\n      <div>\n        {\n          imagePaths.map((v) => (\n            <ImageWrraper key={v}>\n              <Image src={v} alt=\"이미지\" title=\"이미지\" />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </ImageWrraper>\n          ))\n        }\n      </div>\n    </FormWrapper>\n  );\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}