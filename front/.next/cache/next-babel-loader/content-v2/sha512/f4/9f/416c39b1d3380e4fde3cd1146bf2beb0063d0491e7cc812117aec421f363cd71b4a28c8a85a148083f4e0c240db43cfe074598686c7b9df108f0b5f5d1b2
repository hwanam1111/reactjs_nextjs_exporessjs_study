{"ast":null,"code":"import { all, call, fork, put, throttle } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\n\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n  return axios.post('/api/~~~', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield throttle('LOG_IN_REQUEST', login, 2000);\n}\n\nfunction* watchLogout() {\n  yield throttle('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield throttle('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/index.js"],"names":["all","call","fork","put","throttle","axios","loginAPI","data","post","login","action","result","type","err","response","watchLogin","watchLogout","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,QAA/B,QAA+C,oBAA/C,C,CAAqE;;AACrE,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,UAAX,EAAuBD,IAAvB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMV,IAAI,CAACK,QAAD,EAAWI,MAAM,CAACH,IAAlB,CAAzB;AACA,UAAMJ,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAERL,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAND,CAOA,OAAMM,GAAN,EAAW;AACT,UAAMV,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAE,gBADE;AAERL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,UAAV,GAAuB;AACrB,QAAMX,QAAQ,CAAC,gBAAD,EAAmBK,KAAnB,EAA0B,IAA1B,CAAd;AACD;;AAED,UAAUO,WAAV,GAAwB;AACtB,QAAMZ,QAAQ,CAAC,SAAD,CAAd;AACD;;AAED,UAAUa,YAAV,GAAyB;AACvB,QAAMb,QAAQ,CAAC,UAAD,CAAd;AACD;;AAED,eAAe,UAAUc,QAAV,GAAqB;AAClC,QAAMlB,GAAG,CAAC,CACNE,IAAI,CAACa,UAAD,CADE,EAENb,IAAI,CAACc,WAAD,CAFE,EAGNd,IAAI,CAACe,YAAD,CAHE,CAAD,CAAT;AAKD","sourcesContent":["import { all, call, fork, put, throttle } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n  return axios.post('/api/~~~', data);\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield throttle('LOG_IN_REQUEST', login, 2000);\n}\n\nfunction* watchLogout() {\n  yield throttle('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield throttle('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([\n      fork(watchLogin),\n      fork(watchLogout),\n      fork(watchAddPost)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}