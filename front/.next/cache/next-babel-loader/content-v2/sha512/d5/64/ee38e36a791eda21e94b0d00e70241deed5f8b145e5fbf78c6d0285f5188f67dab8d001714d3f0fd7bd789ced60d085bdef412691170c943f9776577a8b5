{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  user: {},\n  post: {}\n};\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT'\n  };\n}; // (이전상태, 액션) => 다음상태\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload","isLoggedIn"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AASA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKN,OAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,6CACKD,KADL,GAEKC,MAAM,CAACG,OAFZ;;AAIF,SAAK,QAAL;AACE,6CACKJ,KADL;AAEEP,QAAAA,IAAI,kCACCO,KAAK,CAACP,IADP;AAEFY,UAAAA,UAAU,EAAE,IAFV;AAGFZ,UAAAA,IAAI,EAAEQ,MAAM,CAACL;AAHX;AAFN;;AAQF,SAAK,SAAL;AACE,6CACKI,KADL;AAEEP,QAAAA,IAAI,kCACCO,KAAK,CAACP,IADP;AAEFY,UAAAA,UAAU,EAAE,KAFV;AAGFZ,UAAAA,IAAI,EAAE;AAHJ;AAFN;;AAQF;AACE,aAAOO,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nconst initialState = {\n  user: {\n\n  },\n  post: {\n\n  }\n}\n\nexport const loginAction = (data) => {\n  return {\n    type: 'LOG_IN',\n    data\n  }\n}\n\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT',\n  }\n}\n\n// (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return { \n        ...state, \n        ...action.payload \n      };\n    case 'LOG_IN':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n          user: action.data\n        }\n      };\n    case 'LOG_OUT':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: false,\n          user: null\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}