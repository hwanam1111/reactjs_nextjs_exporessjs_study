{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpDate: {},\n  loginDate: {}\n};\nconst LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const loginSuccessAction = data => {\n  return {\n    type: LOG_IN_SUCCESS,\n    data\n  };\n};\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const loginFailureAction = data => {\n  return {\n    type: LOG_IN_FAILURE,\n    data\n  };\n};\nconst LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nconst LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const logoutSuccessAction = () => {\n  return {\n    type: LOG_OUT_SUCCESS\n  };\n};\nconst LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const logoutFailureAction = () => {\n  return {\n    type: LOG_OUT_FAILURE\n  };\n};\n\nconst userReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        me: action.data\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReduce;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpDate","loginDate","LOG_IN_REQUEST","loginRequestAction","data","type","LOG_IN_SUCCESS","loginSuccessAction","LOG_IN_FAILURE","loginFailureAction","LOG_OUT_REQUEST","logoutRequestAction","LOG_OUT_SUCCESS","logoutSuccessAction","LOG_OUT_FAILURE","logoutFailureAction","userReduce","state","action","isLoggingIn"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE,KADc;AAE1BC,EAAAA,EAAE,EAAE,IAFsB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,SAAS,EAAE;AAJe,CAArB;AAOP,MAAMC,cAAc,GAAG,gBAAvB;AACA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEH,cADD;AAELE,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,MAAME,cAAc,GAAG,gBAAvB;AACA,OAAO,MAAMC,kBAAkB,GAAIH,IAAD,IAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEC,cADD;AAELF,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,MAAMI,cAAc,GAAG,gBAAvB;AACA,OAAO,MAAMC,kBAAkB,GAAIL,IAAD,IAAU;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEG,cADD;AAELJ,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,MAAMM,eAAe,GAAG,iBAAxB;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLN,IAAAA,IAAI,EAAEK;AADD,GAAP;AAGD,CAJM;AAMP,MAAME,eAAe,GAAG,iBAAxB;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLR,IAAAA,IAAI,EAAEO;AADD,GAAP;AAGD,CAJM;AAMP,MAAME,eAAe,GAAG,iBAAxB;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLV,IAAAA,IAAI,EAAES;AADD,GAAP;AAGD,CAJM;;AAMP,MAAME,UAAU,GAAG,CAACC,KAAK,GAAGpB,YAAT,EAAuBqB,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKH,cAAL;AACE,6CACKe,KADL;AAEEE,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKb,cAAL;AACE,6CACKW,KADL;AAEEE,QAAAA,WAAW,EAAE,KAFf;AAGErB,QAAAA,UAAU,EAAE,IAHd;AAIEC,QAAAA,EAAE,EAAEmB,MAAM,CAACd;AAJb;;AAMF,SAAKI,cAAL;AACE,6CACKS,KADL;AAEEE,QAAAA,WAAW,EAAE,KAFf;AAGEpB,QAAAA,EAAE,EAAEmB,MAAM,CAACd;AAHb;;AAKF,SAAKM,eAAL;AACE,6CACKO,KADL;AAEEnB,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF,SAAKa,eAAL;AACE,6CACKK,KADL;AAEEnB,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF,SAAKe,eAAL;AACE,6CACKG,KADL;AAEEnB,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,EAAE,EAAE;AAHN;;AAKF;AACE,aAAOkB,KAAP;AAtCJ;AAwCD,CAzCD;;AA2CA,eAAeD,UAAf","sourcesContent":["export const initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpDate: {},\n  loginDate: {}\n}\n\nconst LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  }\n}\n\nconst LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const loginSuccessAction = (data) => {\n  return {\n    type: LOG_IN_SUCCESS,\n    data\n  }\n}\n\nconst LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const loginFailureAction = (data) => {\n  return {\n    type: LOG_IN_FAILURE,\n    data\n  }\n}\n\nconst LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST,\n  }\n}\n\nconst LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const logoutSuccessAction = () => {\n  return {\n    type: LOG_OUT_SUCCESS,\n  }\n}\n\nconst LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const logoutFailureAction = () => {\n  return {\n    type: LOG_OUT_FAILURE,\n  }\n}\n\nconst userReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return {\n        ...state,\n        isLoggingIn: false,\n      };\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: action.data\n      };\n    case LOG_IN_FAILURE:\n      return {\n        ...state,\n        isLoggingIn: false,\n        me: action.data\n      };\n    case LOG_OUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        me: null\n      };\n    case LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n        me: null\n      };\n    case LOG_OUT_FAILURE:\n      return {\n        ...state,\n        isLoggedIn: false,\n        me: null\n      };\n    default: \n      return state;\n  }\n};\n\nexport default userReduce;"]},"metadata":{},"sourceType":"module"}