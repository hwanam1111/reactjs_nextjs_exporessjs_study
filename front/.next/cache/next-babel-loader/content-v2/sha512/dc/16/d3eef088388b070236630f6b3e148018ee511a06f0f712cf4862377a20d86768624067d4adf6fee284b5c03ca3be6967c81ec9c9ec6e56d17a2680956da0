{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/CommentForm.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({\n  post\n}) => {\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const meId = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentLoading,\n    addCommentComplete\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (addCommentComplete) {\n      setCommentText('');\n    }\n  }, [setCommentText, addCommentComplete]);\n  const dispatch = useDispatch();\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: meId\n      }\n    });\n  }, [commentText, meId]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        row: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        loading: addCommentLoading,\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/CommentForm.js"],"names":["React","useEffect","useCallback","useSelector","useDispatch","Form","Input","Button","PropTypes","useInput","ADD_COMMENT_REQUEST","CommentForm","post","commentText","onChangeCommentText","setCommentText","meId","state","user","me","id","addCommentLoading","addCommentComplete","dispatch","onSubmitComment","type","data","content","postId","userId","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAM,CAACC,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDN,QAAQ,CAAC,EAAD,CAAnE;AAEA,QAAMO,IAAI,GAAGb,WAAW,CAAEc,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeC,EAA1B;AAAA,GAAD,CAAxB;AACA,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA4CnB,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACL,IAAlB,CAA7D;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,kBAAJ,EAAwB;AACtBP,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAJQ,EAIN,CAACA,cAAD,EAAiBO,kBAAjB,CAJM,CAAT;AAMA,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,eAAe,GAAGtB,WAAW,CAAC,MAAM;AACxCqB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAEd,WADL;AAEJe,QAAAA,MAAM,EAAEhB,IAAI,CAACQ,EAFT;AAGJS,QAAAA,MAAM,EAAEb;AAHJ;AAFC,KAAD,CAAR;AAQD,GATkC,EAShC,CAACH,WAAD,EAAcG,IAAd,CATgC,CAAnC;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEX,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,GAAG,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,OAAO,EAAEO,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhCD;;AAkCAV,WAAW,CAACmB,SAAZ,GAAwB;AACtBlB,EAAAA,IAAI,EAAEJ,SAAS,CAACuB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAerB,WAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\n\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  const meId = useSelector((state) => state.user.me?.id);\n  const { addCommentLoading, addCommentComplete } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (addCommentComplete) {\n      setCommentText('');\n    }\n  }, [setCommentText, addCommentComplete]);\n\n  const dispatch = useDispatch();\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: meId,\n      },\n    });\n  }, [commentText, meId]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} row={4} />\n        <Button htmlType=\"submit\" loading={addCommentLoading}>작성</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}