{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js\";\nimport React, { useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { addPostRequestAction } from '../reducers/post';\nconst FormWrapper = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1s2xvqa-0\"\n})([\"margin:20px;\"]);\nconst ImageWrraper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"PostForm__ImageWrraper\",\n  componentId: \"sc-1s2xvqa-1\"\n})([\"display:inline-block;\"]);\nconst Image = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"PostForm__Image\",\n  componentId: \"sc-1s2xvqa-2\"\n})([\"width:200px;\"]);\n\nconst PostForm = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const [text, onChangeText, setText] = useInput('');\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const dispatch = useDispatch();\n  let tempId = 100;\n  const onSubmitPostForm = useCallback(() => {\n    dispatch(addPostRequestAction({\n      text\n    }));\n    setText('');\n  }, [text, setText]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitPostForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      placeholder: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: imageInput,\n        multiple: true,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onClickImageUploadBtn,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(ImageWrraper, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: v,\n          alt: \"\\uC774\\uBBF8\\uC9C0\",\n          title: \"\\uC774\\uBBF8\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useSelector","useDispatch","Form","Input","Button","styled","useInput","addPostRequestAction","FormWrapper","ImageWrraper","div","Image","img","PostForm","imagePaths","state","post","me","user","text","onChangeText","setText","imageInput","onClickImageUploadBtn","current","click","dispatch","tempId","onSubmitPostForm","map","v"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\n\nimport useInput from '../hooks/useinput';\nimport { addPostRequestAction } from '../reducers/post';\n\nconst FormWrapper = styled(Form)`\n  margin: 20px;\n`;\n\nconst ImageWrraper = styled.div`\n  display: inline-block;\n`;\n\nconst Image = styled.img`\n  width: 200px;\n`;\n\nconst PostForm = () => {\n  const { imagePaths } = useSelector((state) => state.post);\n  const { me } = useSelector((state) => state.user);\n\n  const [text, onChangeText, setText] = useInput('');\n\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const dispatch = useDispatch();\n  let tempId = 100;\n  const onSubmitPostForm = useCallback(() => {\n    \n    dispatch(addPostRequestAction({text}));\n    setText('');\n  }, [text, setText]);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmitPostForm}>\n      <Input.TextArea value={text} onChange={onChangeText} placeholder=\"게시글을 입력해주세요\" />\n      <div>\n        <input type=\"file\" ref={imageInput} multiple hidden />\n        <Button htmlType=\"button\" onClick={onClickImageUploadBtn}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\">작성하기</Button>\n      </div>\n      <div>\n        {\n          imagePaths.map((v) => (\n            <ImageWrraper key={v}>\n              <Image src={v} alt=\"이미지\" title=\"이미지\" />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </ImageWrraper>\n          ))\n        }\n      </div>\n    </FormWrapper>\n  );\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}