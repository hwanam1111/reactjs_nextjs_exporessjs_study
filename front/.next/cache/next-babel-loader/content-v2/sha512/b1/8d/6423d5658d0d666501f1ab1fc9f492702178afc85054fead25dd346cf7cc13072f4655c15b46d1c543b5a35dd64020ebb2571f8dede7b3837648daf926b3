{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\n\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n  return axios.post('/api/~~~', data);\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/index.js"],"names":["all","call","delay","fork","put","takeLatest","axios","loginAPI","data","post","login","action","type","result","err","response","watchLogin","watchLogout","watchAddPost","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD,C,CAA8E;;AAC9E,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,UAAX,EAAuBD,IAAvB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAPD,CAQA,OAAMM,GAAN,EAAW;AACT,UAAMV,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUQ,UAAV,GAAuB;AACrB,QAAMX,UAAU,CAAC,gBAAD,EAAmBK,KAAnB,CAAhB;AACD;;AAED,UAAUO,WAAV,GAAwB;AACtB,QAAMZ,UAAU,CAAC,SAAD,CAAhB;AACD;;AAED,UAAUa,YAAV,GAAyB;AACvB,QAAMb,UAAU,CAAC,UAAD,CAAhB;AACD;;AAED,eAAe,UAAUc,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CACNG,IAAI,CAACa,UAAD,CADE,EAENb,IAAI,CAACc,WAAD,CAFE,EAGNd,IAAI,CAACe,YAAD,CAHE,CAAD,CAAT;AAKD","sourcesContent":["import { all, call, delay, fork, put, takeLatest } from 'redux-saga/effects'; // fork -> 비동기, call -> 동기\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n  return axios.post('/api/~~~', data);\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: result.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest('LOG_OUT');\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST');\n}\n\nexport default function* rootSaga() {\n  yield all([\n      fork(watchLogin),\n      fork(watchLogout),\n      fork(watchAddPost)\n  ]);\n}"]},"metadata":{},"sourceType":"module"}