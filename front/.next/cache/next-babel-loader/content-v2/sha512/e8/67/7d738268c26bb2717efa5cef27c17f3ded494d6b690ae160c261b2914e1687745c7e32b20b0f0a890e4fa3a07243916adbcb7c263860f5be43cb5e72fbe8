{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/pages/index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_RESET } from '../reducers/user';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    signupComplete\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (signupComplete) {\n      dispatch({\n        type: SIGN_UP_RESET\n      });\n    }\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      const {\n        scrollY\n      } = window;\n      const {\n        clientHeight,\n        scrollHeight\n      } = document.documentElement;\n\n      if (scrollY + clientHeight > scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}; // SSR\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.done();\n});\nexport default Home;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","END","axios","AppLayout","PostForm","PostCard","LOAD_MY_INFO_REQUEST","SIGN_UP_RESET","LOAD_POST_REQUEST","wrapper","Home","dispatch","me","signupComplete","state","user","mainPosts","hasMorePost","loadPostLoading","post","type","onScroll","scrollY","window","clientHeight","scrollHeight","document","documentElement","lastId","length","id","addEventListener","removeEventListener","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","done"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\n\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\n\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_RESET } from '../reducers/user';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me, signupComplete } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePost, loadPostLoading } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (signupComplete) {\n      dispatch({\n        type: SIGN_UP_RESET,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      const { scrollY } = window;\n      const { clientHeight, scrollHeight } = document.documentElement;\n\n      if (scrollY + clientHeight > scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, mainPosts]);\n\n  return (\n    <AppLayout>\n      { me && <PostForm /> }\n      {\n        mainPosts.map((post) => <PostCard key={post.id} post={post} />)\n      }\n    </AppLayout>\n  );\n};\n\n// SSR\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n  });\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.done();\n});\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}