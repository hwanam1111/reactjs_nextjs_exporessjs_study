{"ast":null,"code":"import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\"; // import axios from 'axios';\n// function loginAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/sagas/user.js"],"names":["all","fork","takeLatest","delay","put","logIn","action","type","LOG_IN_SUCCESS","data","err","LOG_IN_FAILURE","error","response","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","watchLogIn","LOG_IN_REQUEST","watchLogOut","LOG_OUT_REQUEST","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,GAAvC,QAAkD,oBAAlD,C,CACA;AAGA;AACA;AACA;;AAEA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAEC,cADE;AAER;AACAC,MAAAA,IAAI,EAAEH,MAAM,CAACG;AAHL,KAAD,CAAT;AAKD,GARD,CASA,OAAMC,GAAN,EAAW;AACT,UAAMN,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAEI,cADE;AAERC,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUK,MAAV,CAAiBR,MAAjB,EAAyB;AACvB,MAAI;AACF;AACA,UAAMH,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAEQ,eADE;AAER;AACAN,MAAAA,IAAI,EAAEH,MAAM,CAACG;AAHL,KAAD,CAAT;AAKD,GARD,CASA,OAAMC,GAAN,EAAW;AACT,UAAMN,GAAG,CAAC;AACRG,MAAAA,IAAI,EAAES,eADE;AAERJ,MAAAA,KAAK,EAAEF,GAAG,CAACG,QAAJ,CAAaJ;AAFZ,KAAD,CAAT;AAID;AACF;;AAID,UAAUQ,UAAV,GAAuB;AACrB,QAAMf,UAAU,CAACgB,cAAD,EAAiBb,KAAjB,CAAhB;AACD;;AAED,UAAUc,WAAV,GAAwB;AACtB,QAAMjB,UAAU,CAACkB,eAAD,EAAkBN,MAAlB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMrB,GAAG,CAAC,CACRC,IAAI,CAACgB,UAAD,CADI,EAERhB,IAAI,CAACkB,WAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\n// import axios from 'axios';\n\n\n// function loginAPI(data) {\n//   return axios.post('/api/~~~', data);\n// }\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    // const result = yield call(loginAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      // data: result.data\n      data: action.data\n    });\n  }\n  catch(err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut)\n  ])\n}"]},"metadata":{},"sourceType":"module"}