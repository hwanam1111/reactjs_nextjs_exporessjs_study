{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { UPLOAD_IMAGES_REQUEST, addPostRequestAction } from '../reducers/post';\nvar FormWrapper = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"PostForm__FormWrapper\",\n  componentId: \"sc-1s2xvqa-0\"\n})([\"margin:20px;\"]);\n_c = FormWrapper;\nvar ImageWrraper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"PostForm__ImageWrraper\",\n  componentId: \"sc-1s2xvqa-1\"\n})([\"display:inline-block;\"]);\n_c2 = ImageWrraper;\nvar Image = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"PostForm__Image\",\n  componentId: \"sc-1s2xvqa-2\"\n})([\"width:200px;\"]);\n_c3 = Image;\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostLoading = _useSelector.addPostLoading,\n      addPostComplete = _useSelector.addPostComplete;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostComplete) {\n      setText('');\n    }\n  }, [addPostComplete, setText]);\n  var imageInput = useRef(null);\n  var onClickImageUploadBtn = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImage = useCallback(function (evt) {\n    console.log('images', evt.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(evt.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onSubmitPostForm = useCallback(function () {\n    dispatch(addPostRequestAction({\n      content: text\n    }));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitPostForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      placeholder: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        ref: imageInput,\n        multiple: true,\n        hidden: true,\n        onChange: onChangeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onClickImageUploadBtn,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(ImageWrraper, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"http://localhost:3065/\".concat(v),\n            alt: \"\\uC774\\uBBF8\\uC9C0\",\n            title: \"\\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"rvf60a5yi+VarRaOxU5a1Uts4+U=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c4 = PostForm;\nexport default PostForm;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FormWrapper\");\n$RefreshReg$(_c2, \"ImageWrraper\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"PostForm\");","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/components/PostForm.js"],"names":["React","useEffect","useCallback","useRef","useDispatch","useSelector","Form","Input","Button","styled","useInput","UPLOAD_IMAGES_REQUEST","addPostRequestAction","FormWrapper","ImageWrraper","div","Image","img","PostForm","dispatch","state","post","imagePaths","addPostLoading","addPostComplete","text","onChangeText","setText","imageInput","onClickImageUploadBtn","current","click","onChangeImage","evt","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","onSubmitPostForm","content","map","v"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport styled from 'styled-components';\nimport useInput from '../hooks/useinput';\nimport { UPLOAD_IMAGES_REQUEST, addPostRequestAction } from '../reducers/post';\n\nconst FormWrapper = styled(Form)`\n  margin: 20px;\n`;\n\nconst ImageWrraper = styled.div`\n  display: inline-block;\n`;\n\nconst Image = styled.img`\n  width: 200px;\n`;\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n\n  const { imagePaths, addPostLoading, addPostComplete } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostComplete) {\n      setText('');\n    }\n  }, [addPostComplete, setText]);\n\n  const imageInput = useRef(null);\n  const onClickImageUploadBtn = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImage = useCallback((evt) => {\n    console.log('images', evt.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(evt.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onSubmitPostForm = useCallback(() => {\n    dispatch(addPostRequestAction({ content: text }));\n  }, [text]);\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmitPostForm}>\n      <Input.TextArea value={text} onChange={onChangeText} placeholder=\"게시글을 입력해주세요\" />\n      <div>\n        <input type=\"file\" name=\"image\" ref={imageInput} multiple hidden onChange={onChangeImage} />\n        <Button htmlType=\"button\" onClick={onClickImageUploadBtn}>이미지 업로드</Button>\n        <Button type=\"primary\" htmlType=\"submit\" loading={addPostLoading}>작성하기</Button>\n      </div>\n      <div>\n        {\n          imagePaths.map((v) => (\n            <ImageWrraper key={v}>\n              <Image src={`http://localhost:3065/${v}`} alt=\"이미지\" title=\"이미지\" />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </ImageWrraper>\n          ))\n        }\n      </div>\n    </FormWrapper>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}