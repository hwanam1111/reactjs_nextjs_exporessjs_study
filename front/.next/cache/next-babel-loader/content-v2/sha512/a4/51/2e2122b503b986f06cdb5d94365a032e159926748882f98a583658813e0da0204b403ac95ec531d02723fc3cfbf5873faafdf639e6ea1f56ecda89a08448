{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers/index';\n\nvar loggerMiddleware = function loggerMiddleware(dispatch, getState) {\n  return function (next) {\n    return function (action) {\n      console.info(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  // redux를 개발자 도구와 연동\n  var middlewares = [thunkMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); // 배포용과 개발용을 나눔\n\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","thunkMiddleware","composeWithDevTools","reducer","loggerMiddleware","dispatch","getState","next","action","console","info","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,CAAEC,QAAF,EAAYC,QAAZ;AAAA,SAA0B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACxEC,MAAAA,OAAO,CAACC,IAAR,CAAaF,MAAb;AAEA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KAJmD;AAAA,GAA1B;AAAA,CAA1B;;AAMA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B;AACA,MAAMC,WAAW,GAAG,CAACX,eAAD,EAAkBG,gBAAlB,CAApB;AACA,MAAMS,QAAQ,GAAG,QAAwCd,OAAO,CAACD,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAA/C,GAAmFV,mBAAmB,CAACJ,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAAvH,CAH2B,CAG+H;;AAC1J,MAAME,KAAK,GAAGd,WAAW,CAACG,OAAD,EAAUU,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACD,CAPD;;AASA,IAAMC,OAAO,GAAGlB,aAAa,CAACc,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from '../reducers/index';\n\nconst loggerMiddleware = (( dispatch, getState ) => (next) => (action) => {\n  console.info(action);\n\n  return next(action);\n});\n\nconst configureStore = () => {\n  // redux를 개발자 도구와 연동\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares)); // 배포용과 개발용을 나눔\n  const store = createStore(reducer, enhancer);\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { \n  debug: process.env.NODE_ENV === 'development'\n});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}