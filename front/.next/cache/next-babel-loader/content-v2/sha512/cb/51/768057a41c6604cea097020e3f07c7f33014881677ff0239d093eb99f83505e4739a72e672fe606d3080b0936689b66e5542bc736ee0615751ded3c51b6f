{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { SIGN_UP_RESET } from '../reducers/user';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      signupComplete = _useSelector.signupComplete;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading;\n\n  console.log(me);\n  useEffect(function () {\n    if (signupComplete) {\n      dispatch({\n        type: SIGN_UP_RESET\n      });\n    }\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      var _window = window,\n          scrollY = _window.scrollY;\n      var _document$documentEle = document.documentElement,\n          clientHeight = _document$documentEle.clientHeight,\n          scrollHeight = _document$documentEle.scrollHeight;\n\n      if (scrollY + clientHeight > scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n}; // SSR\n\n\n_s(Home, \"H6ZeQGFckSjGUG8psajJmYxdYiE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/leejunkim/Desktop/development_study/fullstack-nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","SIGN_UP_RESET","LOAD_POST_REQUEST","Home","dispatch","state","user","me","signupComplete","post","mainPosts","hasMorePost","loadPostLoading","console","log","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","addEventListener","removeEventListener","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAA+BC,aAA/B,QAAoD,kBAApD;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADiB,qBAEcC,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAFzB;AAAA,MAETC,EAFS,gBAETA,EAFS;AAAA,MAELC,cAFK,gBAELA,cAFK;;AAAA,sBAGmCX,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACI,IAAjB;AAAA,GAAD,CAH9C;AAAA,MAGTC,SAHS,iBAGTA,SAHS;AAAA,MAGEC,WAHF,iBAGEA,WAHF;AAAA,MAGeC,eAHf,iBAGeA,eAHf;;AAKjBC,EAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,cAAJ,EAAoB;AAClBJ,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEd;AADC,OAAD,CAAR;AAGD;AACF,GANQ,EAMN,EANM,CAAT;AAQAN,EAAAA,SAAS,CAAC,YAAM;AACd,aAASqB,QAAT,GAAoB;AAAA,oBACEC,MADF;AAAA,UACVC,OADU,WACVA,OADU;AAAA,kCAEqBC,QAAQ,CAACC,eAF9B;AAAA,UAEVC,YAFU,yBAEVA,YAFU;AAAA,UAEIC,YAFJ,yBAEIA,YAFJ;;AAIlB,UAAIJ,OAAO,GAAGG,YAAV,GAAyBC,YAAY,GAAG,GAA5C,EAAiD;AAC/C,YAAIX,WAAW,IAAI,CAACC,eAApB,EAAqC;AAAA;;AACnC,cAAMW,MAAM,iBAAGb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AAEArB,UAAAA,QAAQ,CAAC;AACPW,YAAAA,IAAI,EAAEb,iBADC;AAEPqB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AAEDN,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACD,KAFD;AAGD,GArBQ,EAqBN,CAACL,WAAD,EAAcD,SAAd,CArBM,CAAT;AAuBA,sBACE,QAAC,SAAD;AAAA,eACIH,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADV,EAGIG,SAAS,CAACkB,GAAV,CAAc,UAACnB,IAAD;AAAA,0BAAU,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACgB,EAApB;AAAA;AAAA;AAAA;AAAA,eAAV;AAAA,KAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CA9CD,C,CAgDA;;;GAhDMtB,I;UACaP,W,EACcC,W,EACqBA,W;;;KAHhDM,I;;AAiEN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\n\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\n\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_RESET } from '../reducers/user';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me, signupComplete } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePost, loadPostLoading } = useSelector((state) => state.post);\n\n  console.log(me);\n\n  useEffect(() => {\n    if (signupComplete) {\n      dispatch({\n        type: SIGN_UP_RESET,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    function onScroll() {\n      const { scrollY } = window;\n      const { clientHeight, scrollHeight } = document.documentElement;\n\n      if (scrollY + clientHeight > scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, mainPosts]);\n\n  return (\n    <AppLayout>\n      { me && <PostForm /> }\n      {\n        mainPosts.map((post) => <PostCard key={post.id} post={post} />)\n      }\n    </AppLayout>\n  );\n};\n\n// SSR\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n  });\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}